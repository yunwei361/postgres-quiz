{{- if .Values.init.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-data-init
  namespace: {{ .Values.namespace.name }}
  labels:
    app: postgres-init
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      initContainers:
      - name: wait-for-postgres
        image: {{ .Values.postgresql.image }}
        command: 
          - sh
          - -c
          - |
            until pg_isready -h postgres-service -p {{ .Values.postgresql.port }} -U postgres; do
              echo "Waiting for PostgreSQL to be ready..."
              sleep 2
            done
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
      restartPolicy: Never
      containers:
      - name: postgres-init
        image: {{ .Values.postgresql.image }}
        env:
        - name: PGHOST
          value: "postgres-service"
        - name: PGPORT
          value: {{ .Values.postgresql.port | quote }}
        - name: PGUSER
          value: "postgres"
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: PGDATABASE
          value: "postgres"
        command: ["psql", "-f", "/scripts/init.sql"]
        volumeMounts:
        - name: init-script
          mountPath: /scripts
      volumes:
      - name: init-script
        configMap:
          name: postgres-init-script
{{- end }}
